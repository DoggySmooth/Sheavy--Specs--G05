
/*
* @author Phil
* @date Tue Dec 06 17:51:29 CET 2016
*/
package Sheavy.operations.environment.ActAll.sfForgotPassword {
	import lu.uni.lassy.messir.libraries.calendar
	import lu.uni.lassy.messir.libraries.math
	import lu.uni.lassy.messir.libraries.primitives
	import lu.uni.lassy.messir.libraries.string
	import Sheavy.environment
	import Sheavy.concepts.primarytypes.datatypes
	import Sheavy.concepts.primarytypes.classes

	Operation Model {

		operation: actAll.outactAll.sfForgotPassword():ptBoolean {
			preP {
				let TheSystem:ctState in
				let TheActAll:actAll in
				
				self.rnActor.rnSystem = TheSystem and self.rnActor = TheActAll
				/* PreP01 */
				and TheSystem.vpStarted = true
				/*PreP02*/
				and TheSystem.vpCrisisLevel = 2

			}
			preF {
				let TheSystem:ctState in
				let TheActAll:actAll in
				let IDNumber: ctActAll in
				self.rnActor.rnSystem = TheSystem and self.rnActor = TheActAll
				/* PreF01 */
				TheSystem.rnctActAuthenticated -> select(AbstractID.eq(IDNumber)) = ColctAuthenticated

			}
			postF {
				let TheSystem:ctState in
				let AuthenticatedUser:ctAuthenticated in
				let Password = AuthenticatedUser.Apwd in
				let EmailAddress = AuthenticatedUser.AEmailAddress in
				 self.rnActor.rnSystem = TheSystem and self.rnActor = AuthenticatedUser
				/*PostF01*/
				and sendMail(Password, EmailAddress)
				}

			}
		}

}