/*
* @author Phil
* @date Sun Dec 11 08:53:30 CET 2016
*/

package Sheavy.operations.environment.ActAuthenticated.sfMissionFinished {

import lu.uni.lassy.messir.libraries.calendar
import lu.uni.lassy.messir.libraries.math
import lu.uni.lassy.messir.libraries.primitives
import lu.uni.lassy.messir.libraries.string

import Sheavy.environment
import Sheavy.concepts.primarytypes.datatypes
import Sheavy.concepts.primarytypes.classes

	Operation Model {
		
operation: actAuthenticated.outactAuthenticated.sfMissionFinished():ptBoolean
{
preP{
  let TheSystem: ctState in
  let TheActor:actAuthenticated in
  
  self.rnActor.rnSystem = TheSystem
  and self.rnActor = TheActor
  
/* PreP01 */
  and TheSystem.vpStarted = true
/*PreP02*/
	and TheSystem.vpCrisisLevel = 2

}
preF{true}
postF{
	 let TheSystem: ctState in
  let TheActor:actAuthenticated in
  
  self.rnActor.rnSystem = TheSystem
  and self.rnActor = TheActor
  
  /*PostF01*/
  TheActor.rnctMission.isFinish = true
}
}
	}


}