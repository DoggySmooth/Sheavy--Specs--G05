/*
* @author Phil
* @date Tue Dec 06 17:50:09 CET 2016
*/

package Sheavy.operations.environment.ActAll.sfSafePlaceFinder {

import lu.uni.lassy.messir.libraries.calendar
import lu.uni.lassy.messir.libraries.math
import lu.uni.lassy.messir.libraries.primitives
import lu.uni.lassy.messir.libraries.string


import Sheavy.environment
import Sheavy.concepts.primarytypes.datatypes
import Sheavy.concepts.primarytypes.classes

	Operation Model {
		
operation: actAll.outactAll.sfSafePlaceFinder(GPSLocation:dtGeolocation):ptBoolean
{
preP{
  let TheSystem: ctState in
  let TheActAll:actAll in
  
  self.rnActor.rnSystem = TheSystem
  and self.rnActor = TheActAll
  
/* PreP01 */
  and TheSystem.vpStarted = true
/*PreP02*/
	and TheSystem.vpCrisisLevel = 2
	

}
preF{let TheSystem: ctState in
  let TheActAll:actAll in
   
  self.rnActor.rnSystem = TheSystem
  and self.rnActor = TheActAll
/* PreF01 */
  TheSystem.rnctZone->select(zoneType.eq(Camp))
  = ColctCampZones
  
}
postF{
	let TheSystem: ctState in
  let ColctCampZones:Bag(ctZone) in
  
  self.rnActor.rnSystem = TheSystem
  
  
  /*PostF01*/
  
}
	}


}
}
