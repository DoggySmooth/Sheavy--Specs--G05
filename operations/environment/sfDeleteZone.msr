/*
* @author Phil
* @date Tue Dec 06 18:05:07 CET 2016
*/

package Sheavy.operations.environment.ActCoordinator.sfDeleteZone {

import lu.uni.lassy.messir.libraries.calendar
import lu.uni.lassy.messir.libraries.math
import lu.uni.lassy.messir.libraries.primitives
import lu.uni.lassy.messir.libraries.string

import Sheavy.environment
import Sheavy.concepts.primarytypes.datatypes
import Sheavy.concepts.primarytypes.classes

	Operation Model {

operation: actCoordinator.outactCoordinator.sfDeleteZone(Zone:ctZone):ptBoolean
{
preP{
  let TheSystem: ctState in
  let TheCoor:actCoordinator in
  
  self.rnActor.rnSystem = TheSystem
  and self.rnActor = TheCoor
  
/* PreP01 */
  and TheSystem.vpStarted = true
/*PreP02*/
	and TheSystem.vpCrisisLevel = 2
/* PreP03 */
  and TheCoor.rnctAuthenticated.vpIsLogged = true
}
preF{
  let TheSystem: ctState in
  let TheCoor:actCoordinator in
   
  self.rnActor.rnSystem = TheSystem
  and self.rnActor = TheActor
/* PreF01 */
  TheSystem.rnctZone->select(id.eq(ZoneID))
  = ColctZones
  and ColctZones->size().eq(1)
}
postF{
  let TheSystem: ctState in
  let TheCoor:actCoordinator in
  let ThectZone:ctZone in
  
  self.rnActor.rnSystem = TheSystem
  and self.rnActor = TheActor
/* PostF01 */
  TheSystem.renctZone->select(id.eq(ZoneID))
  = ThectZone
  and ThectZone->forAll(msrIsKilled)
  and ThectZone.msrIsKilled
 
  /* PostF02 */
  and TheCoor.rnInterfaceIN^ieMessage("Zone Deleted!")

 /* Post Protocol:*/
/* PostP01 */
 and true
 }
 postP{true}
 
 }
	}


}